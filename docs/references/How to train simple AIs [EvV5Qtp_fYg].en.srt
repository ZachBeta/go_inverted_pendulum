1
00:00:00,080 --> 00:00:02,550

machine learning is a Hot Topic and for

2
00:00:02,550 --> 00:00:02,560
machine learning is a Hot Topic and for
 

3
00:00:02,560 --> 00:00:05,390
machine learning is a Hot Topic and for
good reason it has unlocked the ability

4
00:00:05,390 --> 00:00:05,400
good reason it has unlocked the ability
 

5
00:00:05,400 --> 00:00:07,470
good reason it has unlocked the ability
for our computers to perform a whole

6
00:00:07,470 --> 00:00:07,480
for our computers to perform a whole
 

7
00:00:07,480 --> 00:00:10,110
for our computers to perform a whole
host of tasks that we simply didn't know

8
00:00:10,110 --> 00:00:10,120
host of tasks that we simply didn't know
 

9
00:00:10,120 --> 00:00:12,950
host of tasks that we simply didn't know
how to program manually this fascinating

10
00:00:12,950 --> 00:00:12,960
how to program manually this fascinating
 

11
00:00:12,960 --> 00:00:14,709
how to program manually this fascinating
discipline is also a lot of fun to try

12
00:00:14,709 --> 00:00:14,719
discipline is also a lot of fun to try
 

13
00:00:14,719 --> 00:00:16,630
discipline is also a lot of fun to try
out on your own but can be quite

14
00:00:16,630 --> 00:00:16,640
out on your own but can be quite
 

15
00:00:16,640 --> 00:00:18,670
out on your own but can be quite
daunting due to its many mathematical

16
00:00:18,670 --> 00:00:18,680
daunting due to its many mathematical
 

17
00:00:18,680 --> 00:00:21,310
daunting due to its many mathematical
and programming prerequisites especially

18
00:00:21,310 --> 00:00:21,320
and programming prerequisites especially
 

19
00:00:21,320 --> 00:00:22,870
and programming prerequisites especially
if you want to write everything from

20
00:00:22,870 --> 00:00:22,880
if you want to write everything from
 

21
00:00:22,880 --> 00:00:25,830
if you want to write everything from
scratch yourself a branch of machine

22
00:00:25,830 --> 00:00:25,840
scratch yourself a branch of machine
 

23
00:00:25,840 --> 00:00:28,390
scratch yourself a branch of machine
learning called reinforcement learning

24
00:00:28,390 --> 00:00:28,400
learning called reinforcement learning
 

25
00:00:28,400 --> 00:00:31,269
learning called reinforcement learning
is particularly appealing it promises to

26
00:00:31,269 --> 00:00:31,279
is particularly appealing it promises to
 

27
00:00:31,279 --> 00:00:34,270
is particularly appealing it promises to
teach a program to perform complex tasks

28
00:00:34,270 --> 00:00:34,280
teach a program to perform complex tasks
 

29
00:00:34,280 --> 00:00:35,830
teach a program to perform complex tasks
by letting it carry out its own

30
00:00:35,830 --> 00:00:35,840
by letting it carry out its own
 

31
00:00:35,840 --> 00:00:38,069
by letting it carry out its own
experiments in a given environment

32
00:00:38,069 --> 00:00:38,079
experiments in a given environment
 

33
00:00:38,079 --> 00:00:39,630
experiments in a given environment
however this set of techniques requires

34
00:00:39,630 --> 00:00:39,640
however this set of techniques requires
 

35
00:00:39,640 --> 00:00:41,310
however this set of techniques requires
an excellent understanding of the

36
00:00:41,310 --> 00:00:41,320
an excellent understanding of the
 

37
00:00:41,320 --> 00:00:43,510
an excellent understanding of the
machine learning principles on which it

38
00:00:43,510 --> 00:00:43,520
machine learning principles on which it
 

39
00:00:43,520 --> 00:00:46,270
machine learning principles on which it
is based in this video I'm going to

40
00:00:46,270 --> 00:00:46,280
is based in this video I'm going to
 

41
00:00:46,280 --> 00:00:48,630
is based in this video I'm going to
present a very simple method which you

42
00:00:48,630 --> 00:00:48,640
present a very simple method which you
 

43
00:00:48,640 --> 00:00:51,029
present a very simple method which you
can do yourself from scratch and which

44
00:00:51,029 --> 00:00:51,039
can do yourself from scratch and which
 

45
00:00:51,039 --> 00:00:54,510
can do yourself from scratch and which
requires much less theoretical knowledge

46
00:00:54,510 --> 00:00:54,520
requires much less theoretical knowledge
 

47
00:00:54,520 --> 00:00:57,069
requires much less theoretical knowledge
naturally this method is also far less

48
00:00:57,069 --> 00:00:57,079
naturally this method is also far less
 

49
00:00:57,079 --> 00:00:58,150
naturally this method is also far less
powerful than the current

50
00:00:58,150 --> 00:00:58,160
powerful than the current
 

51
00:00:58,160 --> 00:01:00,069
powerful than the current
state-ofthe-art but

52
00:01:00,069 --> 00:01:00,079
state-ofthe-art but
 

53
00:01:00,079 --> 00:01:01,709
state-ofthe-art but
does at least allow you to build up an

54
00:01:01,709 --> 00:01:01,719
does at least allow you to build up an
 

55
00:01:01,719 --> 00:01:03,350
does at least allow you to build up an
intuition about the fundamental

56
00:01:03,350 --> 00:01:03,360
intuition about the fundamental
 

57
00:01:03,360 --> 00:01:05,429
intuition about the fundamental
principles while playing around with

58
00:01:05,429 --> 00:01:05,439
principles while playing around with
 

59
00:01:05,439 --> 00:01:08,190
principles while playing around with
some amusing results to give a concrete

60
00:01:08,190 --> 00:01:08,200
some amusing results to give a concrete
 

61
00:01:08,200 --> 00:01:10,749
some amusing results to give a concrete
example of how to use this method I'm

62
00:01:10,749 --> 00:01:10,759
example of how to use this method I'm
 

63
00:01:10,759 --> 00:01:13,350
example of how to use this method I'm
going to apply it to a classic case

64
00:01:13,350 --> 00:01:13,360
going to apply it to a classic case
 

65
00:01:13,360 --> 00:01:16,030
going to apply it to a classic case
stabilizing an inverted pendulum on a

66
00:01:16,030 --> 00:01:16,040
stabilizing an inverted pendulum on a
 

67
00:01:16,040 --> 00:01:18,630
stabilizing an inverted pendulum on a
cart this technique is heavily inspired

68
00:01:18,630 --> 00:01:18,640
cart this technique is heavily inspired
 

69
00:01:18,640 --> 00:01:21,310
cart this technique is heavily inspired
by the famous neat algorithm

70
00:01:21,310 --> 00:01:21,320
by the famous neat algorithm
 

71
00:01:21,320 --> 00:01:24,030
by the famous neat algorithm
neuroevolution of augmenting topologies

72
00:01:24,030 --> 00:01:24,040
neuroevolution of augmenting topologies
 

73
00:01:24,040 --> 00:01:25,550
neuroevolution of augmenting topologies
but in a simplified

74
00:01:25,550 --> 00:01:25,560
but in a simplified
 

75
00:01:25,560 --> 00:01:28,190
but in a simplified
version the principle of this algorithm

76
00:01:28,190 --> 00:01:28,200
version the principle of this algorithm
 

77
00:01:28,200 --> 00:01:30,510
version the principle of this algorithm
is to evolve neural networks

78
00:01:30,510 --> 00:01:30,520
is to evolve neural networks
 

79
00:01:30,520 --> 00:01:32,469
is to evolve neural networks
both in terms of their architecture and

80
00:01:32,469 --> 00:01:32,479
both in terms of their architecture and
 

81
00:01:32,479 --> 00:01:35,069
both in terms of their architecture and
their weights the advantage of building

82
00:01:35,069 --> 00:01:35,079
their weights the advantage of building
 

83
00:01:35,079 --> 00:01:36,789
their weights the advantage of building
the neural network as the training

84
00:01:36,789 --> 00:01:36,799
the neural network as the training
 

85
00:01:36,799 --> 00:01:39,109
the neural network as the training
progresses is to start with very few

86
00:01:39,109 --> 00:01:39,119
progresses is to start with very few
 

87
00:01:39,119 --> 00:01:41,830
progresses is to start with very few
parameters to optimize at a time this

88
00:01:41,830 --> 00:01:41,840
parameters to optimize at a time this
 

89
00:01:41,840 --> 00:01:44,310
parameters to optimize at a time this
aspect being a notorious limitation of

90
00:01:44,310 --> 00:01:44,320
aspect being a notorious limitation of
 

91
00:01:44,320 --> 00:01:45,670
aspect being a notorious limitation of
evolutionary

92
00:01:45,670 --> 00:01:45,680
evolutionary
 

93
00:01:45,680 --> 00:01:48,310
evolutionary
algorithms the type of networks used is

94
00:01:48,310 --> 00:01:48,320
algorithms the type of networks used is
 

95
00:01:48,320 --> 00:01:49,789
algorithms the type of networks used is
a little different from traditional

96
00:01:49,789 --> 00:01:49,799
a little different from traditional
 

97
00:01:49,799 --> 00:01:52,310
a little different from traditional
models based on interconnected layers

98
00:01:52,310 --> 00:01:52,320
models based on interconnected layers
 

99
00:01:52,320 --> 00:01:54,109
models based on interconnected layers
since unlike the latter their

100
00:01:54,109 --> 00:01:54,119
since unlike the latter their
 

101
00:01:54,119 --> 00:01:56,350
since unlike the latter their
architecture is designed to evolve as

102
00:01:56,350 --> 00:01:56,360
architecture is designed to evolve as
 

103
00:01:56,360 --> 00:01:57,990
architecture is designed to evolve as
training

104
00:01:57,990 --> 00:01:58,000
training
 

105
00:01:58,000 --> 00:02:01,429
training
progresses here we use dags directed a

106
00:02:01,429 --> 00:02:01,439
progresses here we use dags directed a
 

107
00:02:01,439 --> 00:02:03,990
progresses here we use dags directed a
cyclic graphs to represent neural

108
00:02:03,990 --> 00:02:04,000
cyclic graphs to represent neural
 

109
00:02:04,000 --> 00:02:07,190
cyclic graphs to represent neural
networks dags are a kind of graphs in

110
00:02:07,190 --> 00:02:07,200
networks dags are a kind of graphs in
 

111
00:02:07,200 --> 00:02:10,229
networks dags are a kind of graphs in
which there are no Cycles networks are

112
00:02:10,229 --> 00:02:10,239
which there are no Cycles networks are
 

113
00:02:10,239 --> 00:02:13,309
which there are no Cycles networks are
made up of three types of nodes inputs

114
00:02:13,309 --> 00:02:13,319
made up of three types of nodes inputs
 

115
00:02:13,319 --> 00:02:15,190
made up of three types of nodes inputs
whose value comes from a measurement of

116
00:02:15,190 --> 00:02:15,200
whose value comes from a measurement of
 

117
00:02:15,200 --> 00:02:17,790
whose value comes from a measurement of
the environment hidden nodes whose value

118
00:02:17,790 --> 00:02:17,800
the environment hidden nodes whose value
 

119
00:02:17,800 --> 00:02:20,350
the environment hidden nodes whose value
is not accessed directly but is used for

120
00:02:20,350 --> 00:02:20,360
is not accessed directly but is used for
 

121
00:02:20,360 --> 00:02:22,630
is not accessed directly but is used for
the internal workings of the network and

122
00:02:22,630 --> 00:02:22,640
the internal workings of the network and
 

123
00:02:22,640 --> 00:02:24,670
the internal workings of the network and
outputs whose value will be used to

124
00:02:24,670 --> 00:02:24,680
outputs whose value will be used to
 

125
00:02:24,680 --> 00:02:26,790
outputs whose value will be used to
interact with the

126
00:02:26,790 --> 00:02:26,800
interact with the
 

127
00:02:26,800 --> 00:02:28,990
interact with the
environment the first thing to do in

128
00:02:28,990 --> 00:02:29,000
environment the first thing to do in
 

129
00:02:29,000 --> 00:02:30,949
environment the first thing to do in
order to execute comp network of this

130
00:02:30,949 --> 00:02:30,959
order to execute comp network of this
 

131
00:02:30,959 --> 00:02:33,430
order to execute comp network of this
type is to determine the order in which

132
00:02:33,430 --> 00:02:33,440
type is to determine the order in which
 

133
00:02:33,440 --> 00:02:34,830
type is to determine the order in which
to perform the

134
00:02:34,830 --> 00:02:34,840
to perform the
 

135
00:02:34,840 --> 00:02:37,509
to perform the
operations to do this we can use

136
00:02:37,509 --> 00:02:37,519
operations to do this we can use
 

137
00:02:37,519 --> 00:02:40,309
operations to do this we can use
topological sorting to order nodes

138
00:02:40,309 --> 00:02:40,319
topological sorting to order nodes
 

139
00:02:40,319 --> 00:02:42,350
topological sorting to order nodes
according to their ancestors so that a

140
00:02:42,350 --> 00:02:42,360
according to their ancestors so that a
 

141
00:02:42,360 --> 00:02:45,149
according to their ancestors so that a
descendant is always placed after its

142
00:02:45,149 --> 00:02:45,159
descendant is always placed after its
 

143
00:02:45,159 --> 00:02:48,110
descendant is always placed after its
parents to sort nodes we start by

144
00:02:48,110 --> 00:02:48,120
parents to sort nodes we start by
 

145
00:02:48,120 --> 00:02:51,229
parents to sort nodes we start by
creating a list containing all nodes

146
00:02:51,229 --> 00:02:51,239
creating a list containing all nodes
 

147
00:02:51,239 --> 00:02:52,630
creating a list containing all nodes
without incoming

148
00:02:52,630 --> 00:02:52,640
without incoming
 

149
00:02:52,640 --> 00:02:55,550
without incoming
connections then as long as this list is

150
00:02:55,550 --> 00:02:55,560
connections then as long as this list is
 

151
00:02:55,560 --> 00:02:58,830
connections then as long as this list is
not empty we extract the nodes from it

152
00:02:58,830 --> 00:02:58,840
not empty we extract the nodes from it
 

153
00:02:58,840 --> 00:03:02,149
not empty we extract the nodes from it
one by one and for each one we delete

154
00:03:02,149 --> 00:03:02,159
one by one and for each one we delete
 

155
00:03:02,159 --> 00:03:04,509
one by one and for each one we delete
its outgoing connections then add it to

156
00:03:04,509 --> 00:03:04,519
its outgoing connections then add it to
 

157
00:03:04,519 --> 00:03:07,430
its outgoing connections then add it to
the list of sorted nodes if one of The

158
00:03:07,430 --> 00:03:07,440
the list of sorted nodes if one of The
 

159
00:03:07,440 --> 00:03:09,030
the list of sorted nodes if one of The
Descendants has no more incoming

160
00:03:09,030 --> 00:03:09,040
Descendants has no more incoming
 

161
00:03:09,040 --> 00:03:11,110
Descendants has no more incoming
connections we add it to the list of

162
00:03:11,110 --> 00:03:11,120
connections we add it to the list of
 

163
00:03:11,120 --> 00:03:13,620
connections we add it to the list of
nodes to be

164
00:03:13,620 --> 00:03:13,630
nodes to be
 

165
00:03:13,630 --> 00:03:22,949
nodes to be
[Music]

166
00:03:22,949 --> 00:03:22,959

 

167
00:03:22,959 --> 00:03:25,589

processed at the end of this process we

168
00:03:25,589 --> 00:03:25,599
processed at the end of this process we
 

169
00:03:25,599 --> 00:03:28,370
processed at the end of this process we
obtain the list of sorted nodes

170
00:03:28,370 --> 00:03:28,380
obtain the list of sorted nodes
 

171
00:03:28,380 --> 00:03:34,390
obtain the list of sorted nodes
[Music]

172
00:03:34,390 --> 00:03:34,400
[Music]
 

173
00:03:34,400 --> 00:03:37,030
[Music]
next we set the value of the inputs with

174
00:03:37,030 --> 00:03:37,040
next we set the value of the inputs with
 

175
00:03:37,040 --> 00:03:39,830
next we set the value of the inputs with
the data coming from the environment and

176
00:03:39,830 --> 00:03:39,840
the data coming from the environment and
 

177
00:03:39,840 --> 00:03:42,149
the data coming from the environment and
following the previously defined order

178
00:03:42,149 --> 00:03:42,159
following the previously defined order
 

179
00:03:42,159 --> 00:03:44,390
following the previously defined order
we apply the operations one after the

180
00:03:44,390 --> 00:03:44,400
we apply the operations one after the
 

181
00:03:44,400 --> 00:03:46,750
we apply the operations one after the
other until we reach the

182
00:03:46,750 --> 00:03:46,760
other until we reach the
 

183
00:03:46,760 --> 00:03:49,710
other until we reach the
outputs for each neuron there are three

184
00:03:49,710 --> 00:03:49,720
outputs for each neuron there are three
 

185
00:03:49,720 --> 00:03:52,589
outputs for each neuron there are three
operations to perform add the bias to

186
00:03:52,589 --> 00:03:52,599
operations to perform add the bias to
 

187
00:03:52,599 --> 00:03:55,030
operations to perform add the bias to
the current sum apply the activation

188
00:03:55,030 --> 00:03:55,040
the current sum apply the activation
 

189
00:03:55,040 --> 00:03:57,630
the current sum apply the activation
function to this result and for each

190
00:03:57,630 --> 00:03:57,640
function to this result and for each
 

191
00:03:57,640 --> 00:04:00,429
function to this result and for each
outgoing connection multiply this value

192
00:04:00,429 --> 00:04:00,439
outgoing connection multiply this value
 

193
00:04:00,439 --> 00:04:02,710
outgoing connection multiply this value
by the connection weight and add the

194
00:04:02,710 --> 00:04:02,720
by the connection weight and add the
 

195
00:04:02,720 --> 00:04:06,589
by the connection weight and add the
result to the sum of the destination

196
00:04:06,589 --> 00:04:06,599
result to the sum of the destination
 

197
00:04:06,599 --> 00:04:09,229
result to the sum of the destination
neuron in this example the activation

198
00:04:09,229 --> 00:04:09,239
neuron in this example the activation
 

199
00:04:09,239 --> 00:04:11,149
neuron in this example the activation
function is the identity function for

200
00:04:11,149 --> 00:04:11,159
function is the identity function for
 

201
00:04:11,159 --> 00:04:13,710
function is the identity function for
the inputs and hyperbolic tangent for

202
00:04:13,710 --> 00:04:13,720
the inputs and hyperbolic tangent for
 

203
00:04:13,720 --> 00:04:14,550
the inputs and hyperbolic tangent for
the other

204
00:04:14,550 --> 00:04:14,560
the other
 

205
00:04:14,560 --> 00:04:17,189
the other
neurons The Peculiar nature of this type

206
00:04:17,189 --> 00:04:17,199
neurons The Peculiar nature of this type
 

207
00:04:17,199 --> 00:04:20,270
neurons The Peculiar nature of this type
of network makes it slow to run unlike

208
00:04:20,270 --> 00:04:20,280
of network makes it slow to run unlike
 

209
00:04:20,280 --> 00:04:23,189
of network makes it slow to run unlike
layered networks which exploit Matrix

210
00:04:23,189 --> 00:04:23,199
layered networks which exploit Matrix
 

211
00:04:23,199 --> 00:04:25,990
layered networks which exploit Matrix
multiplications that are massively

212
00:04:25,990 --> 00:04:26,000
multiplications that are massively
 

213
00:04:26,000 --> 00:04:27,909
multiplications that are massively
parallelizable now that we've seen how

214
00:04:27,909 --> 00:04:27,919
parallelizable now that we've seen how
 

215
00:04:27,919 --> 00:04:29,430
parallelizable now that we've seen how
the neural networks used in this

216
00:04:29,430 --> 00:04:29,440
the neural networks used in this
 

217
00:04:29,440 --> 00:04:31,430
the neural networks used in this
approach apprach work let's see how they

218
00:04:31,430 --> 00:04:31,440
approach apprach work let's see how they
 

219
00:04:31,440 --> 00:04:33,350
approach apprach work let's see how they
can be trained to perform the required

220
00:04:33,350 --> 00:04:33,360
can be trained to perform the required
 

221
00:04:33,360 --> 00:04:35,710
can be trained to perform the required
task training is carried out in

222
00:04:35,710 --> 00:04:35,720
task training is carried out in
 

223
00:04:35,720 --> 00:04:38,029
task training is carried out in
successive iterations each of these

224
00:04:38,029 --> 00:04:38,039
successive iterations each of these
 

225
00:04:38,039 --> 00:04:40,629
successive iterations each of these
iterations takes place in three stages

226
00:04:40,629 --> 00:04:40,639
iterations takes place in three stages
 

227
00:04:40,639 --> 00:04:47,390
iterations takes place in three stages
evaluation selection and

228
00:04:47,390 --> 00:04:47,400

 

229
00:04:47,400 --> 00:04:49,990

mutation the aim of each iteration is to

230
00:04:49,990 --> 00:04:50,000
mutation the aim of each iteration is to
 

231
00:04:50,000 --> 00:04:52,909
mutation the aim of each iteration is to
generate a population n+ one containing

232
00:04:52,909 --> 00:04:52,919
generate a population n+ one containing
 

233
00:04:52,919 --> 00:04:54,629
generate a population n+ one containing
agents that perform better than the

234
00:04:54,629 --> 00:04:54,639
agents that perform better than the
 

235
00:04:54,639 --> 00:04:56,469
agents that perform better than the
generation

236
00:04:56,469 --> 00:04:56,479
generation
 

237
00:04:56,479 --> 00:04:59,150
generation
n the first step is to assess the

238
00:04:59,150 --> 00:04:59,160
n the first step is to assess the
 

239
00:04:59,160 --> 00:05:02,510
n the first step is to assess the
current population on the task in hand

240
00:05:02,510 --> 00:05:02,520
current population on the task in hand
 

241
00:05:02,520 --> 00:05:05,150
current population on the task in hand
to do this we use a fitness function

242
00:05:05,150 --> 00:05:05,160
to do this we use a fitness function
 

243
00:05:05,160 --> 00:05:07,670
to do this we use a fitness function
that Associates a score with each agent

244
00:05:07,670 --> 00:05:07,680
that Associates a score with each agent
 

245
00:05:07,680 --> 00:05:09,790
that Associates a score with each agent
representing its ability to perform the

246
00:05:09,790 --> 00:05:09,800
representing its ability to perform the
 

247
00:05:09,800 --> 00:05:12,430
representing its ability to perform the
task finding a good Fitness function can

248
00:05:12,430 --> 00:05:12,440
task finding a good Fitness function can
 

249
00:05:12,440 --> 00:05:14,629
task finding a good Fitness function can
be tricky but it can have drastic

250
00:05:14,629 --> 00:05:14,639
be tricky but it can have drastic
 

251
00:05:14,639 --> 00:05:16,670
be tricky but it can have drastic
consequences on the final result as

252
00:05:16,670 --> 00:05:16,680
consequences on the final result as
 

253
00:05:16,680 --> 00:05:19,629
consequences on the final result as
we'll see

254
00:05:19,629 --> 00:05:19,639

 

255
00:05:19,639 --> 00:05:22,070

later the second step is to select the

256
00:05:22,070 --> 00:05:22,080
later the second step is to select the
 

257
00:05:22,080 --> 00:05:24,110
later the second step is to select the
agents who will participate in the next

258
00:05:24,110 --> 00:05:24,120
agents who will participate in the next
 

259
00:05:24,120 --> 00:05:26,629
agents who will participate in the next
iteration to do this they are first

260
00:05:26,629 --> 00:05:26,639
iteration to do this they are first
 

261
00:05:26,639 --> 00:05:30,270
iteration to do this they are first
sorted by score then the top 30% are

262
00:05:30,270 --> 00:05:30,280
sorted by score then the top 30% are
 

263
00:05:30,280 --> 00:05:33,390
sorted by score then the top 30% are
directly added to the next population

264
00:05:33,390 --> 00:05:33,400
directly added to the next population
 

265
00:05:33,400 --> 00:05:36,790
directly added to the next population
unchanged to generate the remaining 70%

266
00:05:36,790 --> 00:05:36,800
unchanged to generate the remaining 70%
 

267
00:05:36,800 --> 00:05:39,189
unchanged to generate the remaining 70%
we draw individuals from the population

268
00:05:39,189 --> 00:05:39,199
we draw individuals from the population
 

269
00:05:39,199 --> 00:05:40,710
we draw individuals from the population
as many times as

270
00:05:40,710 --> 00:05:40,720
as many times as
 

271
00:05:40,720 --> 00:05:43,070
as many times as
necessary each agent has a chance of

272
00:05:43,070 --> 00:05:43,080
necessary each agent has a chance of
 

273
00:05:43,080 --> 00:05:45,029
necessary each agent has a chance of
being selected which is proportional to

274
00:05:45,029 --> 00:05:45,039
being selected which is proportional to
 

275
00:05:45,039 --> 00:05:46,430
being selected which is proportional to
its

276
00:05:46,430 --> 00:05:46,440
its
 

277
00:05:46,440 --> 00:05:49,070
its
score the final step is to evolve the

278
00:05:49,070 --> 00:05:49,080
score the final step is to evolve the
 

279
00:05:49,080 --> 00:05:51,430
score the final step is to evolve the
networks so that they produce slightly

280
00:05:51,430 --> 00:05:51,440
networks so that they produce slightly
 

281
00:05:51,440 --> 00:05:54,909
networks so that they produce slightly
different and ideally better results

282
00:05:54,909 --> 00:05:54,919
different and ideally better results
 

283
00:05:54,919 --> 00:05:56,870
different and ideally better results
each selected Network then has a chance

284
00:05:56,870 --> 00:05:56,880
each selected Network then has a chance
 

285
00:05:56,880 --> 00:05:59,309
each selected Network then has a chance
to undergo a mutation which can be a new

286
00:05:59,309 --> 00:05:59,319
to undergo a mutation which can be a new
 

287
00:05:59,319 --> 00:06:01,350
to undergo a mutation which can be a new
connction connection a new neuron

288
00:06:01,350 --> 00:06:01,360
connction connection a new neuron
 

289
00:06:01,360 --> 00:06:03,150
connction connection a new neuron
created by splitting an existing

290
00:06:03,150 --> 00:06:03,160
created by splitting an existing
 

291
00:06:03,160 --> 00:06:05,790
created by splitting an existing
Connection in two or a modification of

292
00:06:05,790 --> 00:06:05,800
Connection in two or a modification of
 

293
00:06:05,800 --> 00:06:08,189
Connection in two or a modification of
an existing weight it is also possible

294
00:06:08,189 --> 00:06:08,199
an existing weight it is also possible
 

295
00:06:08,199 --> 00:06:10,629
an existing weight it is also possible
for the network to remain unchanged

296
00:06:10,629 --> 00:06:10,639
for the network to remain unchanged
 

297
00:06:10,639 --> 00:06:12,710
for the network to remain unchanged
we've seen how the algorithm works as a

298
00:06:12,710 --> 00:06:12,720
we've seen how the algorithm works as a
 

299
00:06:12,720 --> 00:06:15,110
we've seen how the algorithm works as a
whole now let's apply it to a concrete

300
00:06:15,110 --> 00:06:15,120
whole now let's apply it to a concrete
 

301
00:06:15,120 --> 00:06:18,430
whole now let's apply it to a concrete
case balancing an inverted

302
00:06:18,430 --> 00:06:18,440
case balancing an inverted
 

303
00:06:18,440 --> 00:06:20,029
case balancing an inverted
[Music]

304
00:06:20,029 --> 00:06:20,039
[Music]
 

305
00:06:20,039 --> 00:06:22,350
[Music]
pendulum for this problem the

306
00:06:22,350 --> 00:06:22,360
pendulum for this problem the
 

307
00:06:22,360 --> 00:06:25,110
pendulum for this problem the
environment is very simple consisting of

308
00:06:25,110 --> 00:06:25,120
environment is very simple consisting of
 

309
00:06:25,120 --> 00:06:27,749
environment is very simple consisting of
a fixed length rail on which a cart can

310
00:06:27,749 --> 00:06:27,759
a fixed length rail on which a cart can
 

311
00:06:27,759 --> 00:06:34,189
a fixed length rail on which a cart can
move with a pendulum connect Ed to

312
00:06:34,189 --> 00:06:34,199

 

313
00:06:34,199 --> 00:06:36,629

it here are the network inputs and

314
00:06:36,629 --> 00:06:36,639
it here are the network inputs and
 

315
00:06:36,639 --> 00:06:39,469
it here are the network inputs and
outputs we'll be using as you can see

316
00:06:39,469 --> 00:06:39,479
outputs we'll be using as you can see
 

317
00:06:39,479 --> 00:06:41,550
outputs we'll be using as you can see
all the network controls is the speed of

318
00:06:41,550 --> 00:06:41,560
all the network controls is the speed of
 

319
00:06:41,560 --> 00:06:44,670
all the network controls is the speed of
the cart on the horizontal

320
00:06:44,670 --> 00:06:44,680
the cart on the horizontal
 

321
00:06:44,680 --> 00:06:48,230
the cart on the horizontal
axis the activation function used is reu

322
00:06:48,230 --> 00:06:48,240
axis the activation function used is reu
 

323
00:06:48,240 --> 00:06:51,070
axis the activation function used is reu
for the hidden neurons and hyperbolic

324
00:06:51,070 --> 00:06:51,080
for the hidden neurons and hyperbolic
 

325
00:06:51,080 --> 00:06:53,390
for the hidden neurons and hyperbolic
tangent for the

326
00:06:53,390 --> 00:06:53,400
tangent for the
 

327
00:06:53,400 --> 00:06:56,390
tangent for the
output for this first test we'll use a

328
00:06:56,390 --> 00:06:56,400
output for this first test we'll use a
 

329
00:06:56,400 --> 00:06:58,869
output for this first test we'll use a
very simple Fitness function giving the

330
00:06:58,869 --> 00:06:58,879
very simple Fitness function giving the
 

331
00:06:58,879 --> 00:07:01,189
very simple Fitness function giving the
network one Point per second when it

332
00:07:01,189 --> 00:07:01,199
network one Point per second when it
 

333
00:07:01,199 --> 00:07:03,189
network one Point per second when it
manages to keep the end of the pendulum

334
00:07:03,189 --> 00:07:03,199
manages to keep the end of the pendulum
 

335
00:07:03,199 --> 00:07:06,189
manages to keep the end of the pendulum
above a threshold this threshold is

336
00:07:06,189 --> 00:07:06,199
above a threshold this threshold is
 

337
00:07:06,199 --> 00:07:08,309
above a threshold this threshold is
equal to the length of the pendulum

338
00:07:08,309 --> 00:07:08,319
equal to the length of the pendulum
 

339
00:07:08,319 --> 00:07:09,869
equal to the length of the pendulum
minus a small

340
00:07:09,869 --> 00:07:09,879
minus a small
 

341
00:07:09,879 --> 00:07:12,469
minus a small
margin to train the network I'll use

342
00:07:12,469 --> 00:07:12,479
margin to train the network I'll use
 

343
00:07:12,479 --> 00:07:15,350
margin to train the network I'll use
1,000 agents who will have 100 seconds

344
00:07:15,350 --> 00:07:15,360
1,000 agents who will have 100 seconds
 

345
00:07:15,360 --> 00:07:17,830
1,000 agents who will have 100 seconds
at each iteration to achieve the best

346
00:07:17,830 --> 00:07:17,840
at each iteration to achieve the best
 

347
00:07:17,840 --> 00:07:21,350
at each iteration to achieve the best
possible score in this case 100 points

348
00:07:21,350 --> 00:07:21,360
possible score in this case 100 points
 

349
00:07:21,360 --> 00:07:23,909
possible score in this case 100 points
to speed up the process the execution of

350
00:07:23,909 --> 00:07:23,919
to speed up the process the execution of
 

351
00:07:23,919 --> 00:07:26,110
to speed up the process the execution of
the iterations is multi-threaded

352
00:07:26,110 --> 00:07:26,120
the iterations is multi-threaded
 

353
00:07:26,120 --> 00:07:27,909
the iterations is multi-threaded
allowing the agents to experiment in

354
00:07:27,909 --> 00:07:27,919
allowing the agents to experiment in
 

355
00:07:27,919 --> 00:07:31,150
allowing the agents to experiment in
parallel

356
00:07:31,150 --> 00:07:31,160

 

357
00:07:31,160 --> 00:07:32,909

I was actually surprised to find that it

358
00:07:32,909 --> 00:07:32,919
I was actually surprised to find that it
 

359
00:07:32,919 --> 00:07:35,150
I was actually surprised to find that it
was quite fun to try and balance it

360
00:07:35,150 --> 00:07:35,160
was quite fun to try and balance it
 

361
00:07:35,160 --> 00:07:38,430
was quite fun to try and balance it
myself albeit rather complicated I must

362
00:07:38,430 --> 00:07:38,440
myself albeit rather complicated I must
 

363
00:07:38,440 --> 00:07:40,469
myself albeit rather complicated I must
admit I practiced a little so I wouldn't

364
00:07:40,469 --> 00:07:40,479
admit I practiced a little so I wouldn't
 

365
00:07:40,479 --> 00:07:42,469
admit I practiced a little so I wouldn't
look too

366
00:07:42,469 --> 00:07:42,479
look too
 

367
00:07:42,479 --> 00:07:44,710
look too
ridiculous let's take a look at training

368
00:07:44,710 --> 00:07:44,720
ridiculous let's take a look at training
 

369
00:07:44,720 --> 00:07:46,980
ridiculous let's take a look at training
with this Fitness

370
00:07:46,980 --> 00:07:46,990
with this Fitness
 

371
00:07:46,990 --> 00:07:50,430
with this Fitness
[Music]

372
00:07:50,430 --> 00:07:50,440

 

373
00:07:50,440 --> 00:07:52,710

function we can already take a look at

374
00:07:52,710 --> 00:07:52,720
function we can already take a look at
 

375
00:07:52,720 --> 00:07:54,749
function we can already take a look at
where our network stand after a few

376
00:07:54,749 --> 00:07:54,759
where our network stand after a few
 

377
00:07:54,759 --> 00:07:56,469
where our network stand after a few
seconds of training at the 10th

378
00:07:56,469 --> 00:07:56,479
seconds of training at the 10th
 

379
00:07:56,479 --> 00:08:05,550
seconds of training at the 10th
iteration

380
00:08:05,550 --> 00:08:05,560

 

381
00:08:05,560 --> 00:08:07,510

and here are all the active agents

382
00:08:07,510 --> 00:08:07,520
and here are all the active agents
 

383
00:08:07,520 --> 00:08:10,350
and here are all the active agents
trying their best to maximize their

384
00:08:10,350 --> 00:08:10,360
trying their best to maximize their
 

385
00:08:10,360 --> 00:08:12,670
trying their best to maximize their
score let's get back to training and

386
00:08:12,670 --> 00:08:12,680
score let's get back to training and
 

387
00:08:12,680 --> 00:08:15,110
score let's get back to training and
follow the agent's progress which so far

388
00:08:15,110 --> 00:08:15,120
follow the agent's progress which so far
 

389
00:08:15,120 --> 00:08:17,830
follow the agent's progress which so far
has been quite

390
00:08:17,830 --> 00:08:17,840

 

391
00:08:17,840 --> 00:08:21,029

rapid with a score of over 99 let's see

392
00:08:21,029 --> 00:08:21,039
rapid with a score of over 99 let's see
 

393
00:08:21,039 --> 00:08:30,070
rapid with a score of over 99 let's see
how the network performs

394
00:08:30,070 --> 00:08:30,080

 

395
00:08:30,080 --> 00:08:32,190

it's not too bad but there's a strong

396
00:08:32,190 --> 00:08:32,200
it's not too bad but there's a strong
 

397
00:08:32,200 --> 00:08:34,550
it's not too bad but there's a strong
oscillation maybe a better solution will

398
00:08:34,550 --> 00:08:34,560
oscillation maybe a better solution will
 

399
00:08:34,560 --> 00:08:42,340
oscillation maybe a better solution will
emerge after a few more

400
00:08:42,340 --> 00:08:42,350

 

401
00:08:42,350 --> 00:08:44,150

[Music]

402
00:08:44,150 --> 00:08:44,160
[Music]
 

403
00:08:44,160 --> 00:08:48,110
[Music]
iterations unfortunately it's even worse

404
00:08:48,110 --> 00:08:48,120
iterations unfortunately it's even worse
 

405
00:08:48,120 --> 00:08:50,389
iterations unfortunately it's even worse
as I said earlier the fitness function

406
00:08:50,389 --> 00:08:50,399
as I said earlier the fitness function
 

407
00:08:50,399 --> 00:08:52,350
as I said earlier the fitness function
plays a fundamental role in the quality

408
00:08:52,350 --> 00:08:52,360
plays a fundamental role in the quality
 

409
00:08:52,360 --> 00:08:55,509
plays a fundamental role in the quality
of the final result let's try to modify

410
00:08:55,509 --> 00:08:55,519
of the final result let's try to modify
 

411
00:08:55,519 --> 00:08:57,550
of the final result let's try to modify
it a little to force networks to find

412
00:08:57,550 --> 00:08:57,560
it a little to force networks to find
 

413
00:08:57,560 --> 00:09:00,750
it a little to force networks to find
more stable Solutions

414
00:09:00,750 --> 00:09:00,760
more stable Solutions
 

415
00:09:00,760 --> 00:09:02,670
more stable Solutions
for this second trial the fitness

416
00:09:02,670 --> 00:09:02,680
for this second trial the fitness
 

417
00:09:02,680 --> 00:09:04,350
for this second trial the fitness
function will be quite similar to the

418
00:09:04,350 --> 00:09:04,360
function will be quite similar to the
 

419
00:09:04,360 --> 00:09:06,590
function will be quite similar to the
First with the score still increasing if

420
00:09:06,590 --> 00:09:06,600
First with the score still increasing if
 

421
00:09:06,600 --> 00:09:08,870
First with the score still increasing if
the pendulum is kept above the threshold

422
00:09:08,870 --> 00:09:08,880
the pendulum is kept above the threshold
 

423
00:09:08,880 --> 00:09:11,190
the pendulum is kept above the threshold
but this time the score will be divided

424
00:09:11,190 --> 00:09:11,200
but this time the score will be divided
 

425
00:09:11,200 --> 00:09:14,110
but this time the score will be divided
by the angular velocity of the pendulum

426
00:09:14,110 --> 00:09:14,120
by the angular velocity of the pendulum
 

427
00:09:14,120 --> 00:09:15,829
by the angular velocity of the pendulum
we can already see that progress is a

428
00:09:15,829 --> 00:09:15,839
we can already see that progress is a
 

429
00:09:15,839 --> 00:09:17,990
we can already see that progress is a
little slower even if it's still very

430
00:09:17,990 --> 00:09:18,000
little slower even if it's still very
 

431
00:09:18,000 --> 00:09:25,190
little slower even if it's still very
much there let's move forward a few

432
00:09:25,190 --> 00:09:25,200

 

433
00:09:25,200 --> 00:09:27,590

iterations now that we've reached 99

434
00:09:27,590 --> 00:09:27,600
iterations now that we've reached 99
 

435
00:09:27,600 --> 00:09:30,280
iterations now that we've reached 99
points let's take a look at the

436
00:09:30,280 --> 00:09:30,290
points let's take a look at the
 

437
00:09:30,290 --> 00:09:32,910
points let's take a look at the
[Music]

438
00:09:32,910 --> 00:09:32,920
[Music]
 

439
00:09:32,920 --> 00:09:35,790
[Music]
result it's already much better the

440
00:09:35,790 --> 00:09:35,800
result it's already much better the
 

441
00:09:35,800 --> 00:09:37,949
result it's already much better the
strong oscillations have disappeared and

442
00:09:37,949 --> 00:09:37,959
strong oscillations have disappeared and
 

443
00:09:37,959 --> 00:09:40,870
strong oscillations have disappeared and
the stable state is reached very quickly

444
00:09:40,870 --> 00:09:40,880
the stable state is reached very quickly
 

445
00:09:40,880 --> 00:09:43,230
the stable state is reached very quickly
however I'd be happier if the pendulum

446
00:09:43,230 --> 00:09:43,240
however I'd be happier if the pendulum
 

447
00:09:43,240 --> 00:09:45,829
however I'd be happier if the pendulum
stabilized in the center of the rail

448
00:09:45,829 --> 00:09:45,839
stabilized in the center of the rail
 

449
00:09:45,839 --> 00:09:48,110
stabilized in the center of the rail
let's adapt the fitness function again

450
00:09:48,110 --> 00:09:48,120
let's adapt the fitness function again
 

451
00:09:48,120 --> 00:09:50,790
let's adapt the fitness function again
to push the solutions towards the

452
00:09:50,790 --> 00:09:50,800
to push the solutions towards the
 

453
00:09:50,800 --> 00:09:53,110
to push the solutions towards the
middle in addition to the previous

454
00:09:53,110 --> 00:09:53,120
middle in addition to the previous
 

455
00:09:53,120 --> 00:09:55,310
middle in addition to the previous
modification the score will be reduced

456
00:09:55,310 --> 00:09:55,320
modification the score will be reduced
 

457
00:09:55,320 --> 00:09:57,110
modification the score will be reduced
in proportion to the distance to the

458
00:09:57,110 --> 00:09:57,120
in proportion to the distance to the
 

459
00:09:57,120 --> 00:09:59,670
in proportion to the distance to the
center

460
00:09:59,670 --> 00:09:59,680
center
 

461
00:09:59,680 --> 00:10:01,990
center
progress is very rapid at first before

462
00:10:01,990 --> 00:10:02,000
progress is very rapid at first before
 

463
00:10:02,000 --> 00:10:05,030
progress is very rapid at first before
slowing down and gently increasing let's

464
00:10:05,030 --> 00:10:05,040
slowing down and gently increasing let's
 

465
00:10:05,040 --> 00:10:15,829
slowing down and gently increasing let's
fast forward and see where it takes

466
00:10:15,829 --> 00:10:15,839

 

467
00:10:15,839 --> 00:10:19,230

us it's exactly what I wanted to see the

468
00:10:19,230 --> 00:10:19,240
us it's exactly what I wanted to see the
 

469
00:10:19,240 --> 00:10:21,389
us it's exactly what I wanted to see the
balance is reached very quickly and then

470
00:10:21,389 --> 00:10:21,399
balance is reached very quickly and then
 

471
00:10:21,399 --> 00:10:24,150
balance is reached very quickly and then
the cart remains almost

472
00:10:24,150 --> 00:10:24,160
the cart remains almost
 

473
00:10:24,160 --> 00:10:26,590
the cart remains almost
stationary this solution was found quite

474
00:10:26,590 --> 00:10:26,600
stationary this solution was found quite
 

475
00:10:26,600 --> 00:10:28,990
stationary this solution was found quite
quickly in less than a minute in real

476
00:10:28,990 --> 00:10:29,000
quickly in less than a minute in real
 

477
00:10:29,000 --> 00:10:30,150
quickly in less than a minute in real
time

478
00:10:30,150 --> 00:10:30,160
time
 

479
00:10:30,160 --> 00:10:32,110
time
of course in simulated time it's a

480
00:10:32,110 --> 00:10:32,120
of course in simulated time it's a
 

481
00:10:32,120 --> 00:10:34,790
of course in simulated time it's a
different story since 1,000 agents spent

482
00:10:34,790 --> 00:10:34,800
different story since 1,000 agents spent
 

483
00:10:34,800 --> 00:10:37,990
different story since 1,000 agents spent
150 times 100 seconds trying out random

484
00:10:37,990 --> 00:10:38,000
150 times 100 seconds trying out random
 

485
00:10:38,000 --> 00:10:40,790
150 times 100 seconds trying out random
things all in all almost 6 months of

486
00:10:40,790 --> 00:10:40,800
things all in all almost 6 months of
 

487
00:10:40,800 --> 00:10:42,550
things all in all almost 6 months of
training were required which isn't

488
00:10:42,550 --> 00:10:42,560
training were required which isn't
 

489
00:10:42,560 --> 00:10:44,710
training were required which isn't
incredible particularly when compared to

490
00:10:44,710 --> 00:10:44,720
incredible particularly when compared to
 

491
00:10:44,720 --> 00:10:46,350
incredible particularly when compared to
the few minutes it takes a human to

492
00:10:46,350 --> 00:10:46,360
the few minutes it takes a human to
 

493
00:10:46,360 --> 00:10:48,710
the few minutes it takes a human to
learn to perform the same task although

494
00:10:48,710 --> 00:10:48,720
learn to perform the same task although
 

495
00:10:48,720 --> 00:10:52,110
learn to perform the same task although
execution remains less optimal and

496
00:10:52,110 --> 00:10:52,120
execution remains less optimal and
 

497
00:10:52,120 --> 00:10:54,990
execution remains less optimal and
precise out of curiosity let's look at

498
00:10:54,990 --> 00:10:55,000
precise out of curiosity let's look at
 

499
00:10:55,000 --> 00:10:56,829
precise out of curiosity let's look at
another possible result by changing the

500
00:10:56,829 --> 00:10:56,839
another possible result by changing the
 

501
00:10:56,839 --> 00:11:04,190
another possible result by changing the
training seed

502
00:11:04,190 --> 00:11:04,200

 

503
00:11:04,200 --> 00:11:06,790

another rather elegant solution although

504
00:11:06,790 --> 00:11:06,800
another rather elegant solution although
 

505
00:11:06,800 --> 00:11:08,590
another rather elegant solution although
the final network is a little more

506
00:11:08,590 --> 00:11:08,600
the final network is a little more
 

507
00:11:08,600 --> 00:11:13,430
the final network is a little more
complex than last

508
00:11:13,430 --> 00:11:13,440

 

509
00:11:13,440 --> 00:11:15,590

time after playing with all these

510
00:11:15,590 --> 00:11:15,600
time after playing with all these
 

511
00:11:15,600 --> 00:11:17,750
time after playing with all these
solutions for a while I wondered how

512
00:11:17,750 --> 00:11:17,760
solutions for a while I wondered how
 

513
00:11:17,760 --> 00:11:19,990
solutions for a while I wondered how
sensitive they were to external

514
00:11:19,990 --> 00:11:20,000
sensitive they were to external
 

515
00:11:20,000 --> 00:11:22,870
sensitive they were to external
disturbances to test this I added random

516
00:11:22,870 --> 00:11:22,880
disturbances to test this I added random
 

517
00:11:22,880 --> 00:11:24,629
disturbances to test this I added random
pulses that are applied to the end of

518
00:11:24,629 --> 00:11:24,639
pulses that are applied to the end of
 

519
00:11:24,639 --> 00:11:27,110
pulses that are applied to the end of
the pendulum in an irregular pattern

520
00:11:27,110 --> 00:11:27,120
the pendulum in an irregular pattern
 

521
00:11:27,120 --> 00:11:28,910
the pendulum in an irregular pattern
let's load the same neural network and

522
00:11:28,910 --> 00:11:28,920
let's load the same neural network and
 

523
00:11:28,920 --> 00:11:30,470
let's load the same neural network and
see what what happens with the addition

524
00:11:30,470 --> 00:11:30,480
see what what happens with the addition
 

525
00:11:30,480 --> 00:11:33,600
see what what happens with the addition
of random

526
00:11:33,600 --> 00:11:33,610

 

527
00:11:33,610 --> 00:11:45,710

[Music]

528
00:11:45,710 --> 00:11:45,720

 

529
00:11:45,720 --> 00:11:47,750

pertubations I was very pleasantly

530
00:11:47,750 --> 00:11:47,760
pertubations I was very pleasantly
 

531
00:11:47,760 --> 00:11:49,470
pertubations I was very pleasantly
surprised to find that the system

532
00:11:49,470 --> 00:11:49,480
surprised to find that the system
 

533
00:11:49,480 --> 00:11:51,710
surprised to find that the system
remained stable even with the

534
00:11:51,710 --> 00:11:51,720
remained stable even with the
 

535
00:11:51,720 --> 00:11:53,829
remained stable even with the
disturbances I was expecting more

536
00:11:53,829 --> 00:11:53,839
disturbances I was expecting more
 

537
00:11:53,839 --> 00:11:55,990
disturbances I was expecting more
sensitivity from the solution

538
00:11:55,990 --> 00:11:56,000
sensitivity from the solution
 

539
00:11:56,000 --> 00:11:59,670
sensitivity from the solution
[Music]

540
00:11:59,670 --> 00:11:59,680

 

541
00:11:59,680 --> 00:12:01,670

I then wanted to interact directly with

542
00:12:01,670 --> 00:12:01,680
I then wanted to interact directly with
 

543
00:12:01,680 --> 00:12:17,710
I then wanted to interact directly with
the pendulum myself to better test its

544
00:12:17,710 --> 00:12:17,720

 

545
00:12:17,720 --> 00:12:20,550

robustness overall I'm very pleased with

546
00:12:20,550 --> 00:12:20,560
robustness overall I'm very pleased with
 

547
00:12:20,560 --> 00:12:22,790
robustness overall I'm very pleased with
these results although the method used

548
00:12:22,790 --> 00:12:22,800
these results although the method used
 

549
00:12:22,800 --> 00:12:23,790
these results although the method used
is very

550
00:12:23,790 --> 00:12:23,800
is very
 

551
00:12:23,800 --> 00:12:26,430
is very
rudimentary however the simple pendulum

552
00:12:26,430 --> 00:12:26,440
rudimentary however the simple pendulum
 

553
00:12:26,440 --> 00:12:28,870
rudimentary however the simple pendulum
seems to be a bit too easy of a problem

554
00:12:28,870 --> 00:12:28,880
seems to be a bit too easy of a problem
 

555
00:12:28,880 --> 00:12:31,470
seems to be a bit too easy of a problem
even for this algorithm that's why in

556
00:12:31,470 --> 00:12:31,480
even for this algorithm that's why in
 

557
00:12:31,480 --> 00:12:33,750
even for this algorithm that's why in
the next video we'll see how this same

558
00:12:33,750 --> 00:12:33,760
the next video we'll see how this same
 

559
00:12:33,760 --> 00:12:36,269
the next video we'll see how this same
algorithm copes with a double pendulum

560
00:12:36,269 --> 00:12:36,279
algorithm copes with a double pendulum
 

561
00:12:36,279 --> 00:12:38,790
algorithm copes with a double pendulum
making the problem far more complex due

562
00:12:38,790 --> 00:12:38,800
making the problem far more complex due
 

563
00:12:38,800 --> 00:12:41,030
making the problem far more complex due
to its extremely unstable and chaotic

564
00:12:41,030 --> 00:12:41,040
to its extremely unstable and chaotic
 

565
00:12:41,040 --> 00:12:46,670
to its extremely unstable and chaotic
nature

566
00:12:46,670 --> 00:12:46,680

 

567
00:12:46,680 --> 00:12:54,409

[Music]

